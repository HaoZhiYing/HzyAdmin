<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HZY.Core.Redis</name>
    </assembly>
    <members>
        <member name="P:HZY.Core.Redis.Aop.Cache.BaseCacheAttribute.CacheKey">
            <summary>
            缓存Key 不填默认是 函数的命名空间.函数名称
            </summary>
            <value></value>
        </member>
        <member name="P:HZY.Core.Redis.Aop.Cache.BaseCacheAttribute.RedisServiceType">
            <summary>
            Redis 服务类型 不传递默认 走内存缓存
            </summary>
            <value></value>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.BaseCacheAttribute.GetCacheKey(Rougamo.Context.MethodContext)">
            <summary>
            获取缓存Key
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.BaseCacheAttribute.ParseCacheKey(Rougamo.Context.MethodContext)">
            <summary>
            解析缓存主键
            </summary>
            <param name="context">拦截器上下文</param>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.BaseCacheAttribute.GetParameterValue(System.Object,System.Collections.Generic.List{System.String})">
            <summary>
            递归获取属性值
            </summary>
            <param name="obj"></param>
            <param name="parameterNames"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.BaseCacheAttribute.GetPropertyInfo(System.Object,System.String)">
            <summary>
            根据属性名称获取实例里的属性
            </summary>
            <param name="obj">实例</param>
            <param name="name">需要的属性名</param>
            <returns></returns>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.BaseCacheAttribute.GetDatabase(Rougamo.Context.MethodContext)">
            <summary>
            获取Redis数据库
            </summary>
            <param name="MethodContext"></param>
            <returns></returns>
        </member>
        <member name="T:HZY.Core.Redis.Aop.Cache.CacheableAttribute">
            <summary>
            缓存AOP
            </summary>
        </member>
        <member name="P:HZY.Core.Redis.Aop.Cache.CacheableAttribute.CacheDuration">
            <summary>
            缓存时长 (秒) 默认存储 10s 如果0代表永久
            </summary>
            <value></value>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheableAttribute.OnEntry(Rougamo.Context.MethodContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheableAttribute.GetMemoryCache(Rougamo.Context.MethodContext)">
            <summary>
            获取 MemoryCache 缓存
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheableAttribute.GetRedisCache(Rougamo.Context.MethodContext)">
            <summary>
            获取 RedisCache 缓存
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheableAttribute.GetRedisCache``1(Rougamo.Context.MethodContext)">
            <summary>
            获取 RedisCache 缓存
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheableAttribute.CreateCache(Rougamo.Context.MethodContext,System.Object)">
            <summary>
            创建缓存
            </summary>
            <param name="MethodContext"></param>
            <param name="result"></param>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheableAttribute.CreateMemoryCache(Rougamo.Context.MethodContext,System.Object)">
            <summary>
            创建内存缓存
            </summary>
            <param name="context"></param>
            <param name="result"></param>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheableAttribute.CreateRedisCache(Rougamo.Context.MethodContext,System.Object)">
            <summary>
            创建Redis缓存
            </summary>
            <param name="context"></param>
            <param name="result"></param>
        </member>
        <member name="T:HZY.Core.Redis.Aop.Cache.CacheEvictAttribute">
            <summary>
            清除缓存AOP
            </summary>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheEvictAttribute.#ctor(System.Type,System.String)">
            <summary>
            用于设置 默认 缓存key 需要 ，自动组合默认缓存名称
            </summary>
            <param name="cacheClassType">缓存 类 类型</param>
            <param name="actionName">缓存函数名称</param>
        </member>
        <member name="P:HZY.Core.Redis.Aop.Cache.CacheEvictAttribute.BeforeRun">
            <summary>
            移除时机  默认方法执行完
            </summary>
            <value></value>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheEvictAttribute.RemoveKey(Rougamo.Context.MethodContext)">
            <summary>
            移除key
            </summary>
            <param name="aopContext"></param>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheEvictAttribute.RemoveRedisKey(Rougamo.Context.MethodContext)">
            <summary>
            移除redis key
            </summary>
            <param name="aopContext"></param>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheEvictAttribute.RemoveRedisGroupKey(Rougamo.Context.MethodContext,System.String)">
            <summary>
            移除Redis分组的key
            </summary>
            <param name="aopContext"></param>
            <param name="cacheKey"></param>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheEvictAttribute.RemoveMemoryKey(Rougamo.Context.MethodContext)">
            <summary>
            移除内存key
            </summary>
            <param name="aopContext"></param>
        </member>
        <member name="M:HZY.Core.Redis.Aop.Cache.CacheEvictAttribute.RemoveMemoryGroupKey(System.String,Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Boolean)">
            <summary>
            移除内存缓存分组的 key
            </summary>
            <param name="pattern"></param>
            <param name="memoryCache"></param>
            <param name="isStart"></param>
        </member>
        <member name="T:HZY.Core.Redis.Configs.RedisConfig">
            <summary>
            redis 配置类
            </summary>
        </member>
        <member name="M:HZY.Core.Redis.Configs.RedisConfig.AddRedisService(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            注册 Redis 模块
            </summary>
            <param name="webApplicationBuilder"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:HZY.Core.Redis.Configs.RedisOptions.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="T:HZY.Core.Redis.CoreRedisStartup">
            <summary>
             redis 启动器
            </summary>
        </member>
        <member name="M:HZY.Core.Redis.CoreRedisStartup.ConfigureServices(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            配置服务
            </summary>
            <param name="webApplicationBuilder"></param>
        </member>
        <member name="M:HZY.Core.Redis.CoreRedisStartup.Configure(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            启动服务
            </summary>
            <param name="webApplication"></param>
        </member>
        <member name="T:HZY.Core.Redis.Services.IBaseRedisService">
            <summary>
            redis 基础服务
            </summary>
        </member>
        <member name="P:HZY.Core.Redis.Services.IBaseRedisService.Database">
            <summary>
            redis 数据库操作
            </summary>
        </member>
        <member name="P:HZY.Core.Redis.Services.IBaseRedisService.Multiplexer">
            <summary>
            
            </summary>
        </member>
        <member name="P:HZY.Core.Redis.Services.Impl.RedisServiceImpl.Database">
            <summary>
            get database
            </summary>
        </member>
        <member name="T:HZY.Core.Redis.Services.IRedisService">
            <summary>
            redis 服务
            </summary>
        </member>
    </members>
</doc>
