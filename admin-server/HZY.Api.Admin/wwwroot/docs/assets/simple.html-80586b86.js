import{_ as t}from"./split-1-1db7d146.js";import{_ as o,r as n,o as r,c,b as e,d as i,e as s,a as l}from"./app-4f4af2d5.js";const d={},h=l('<h1 id="前后端整体部署" tabindex="-1"><a class="header-anchor" href="#前后端整体部署" aria-hidden="true">#</a> 前后端整体部署</h1><div class="custom-container tip"><p class="custom-container-title">提示</p><p>项目采用的是前后端分离的模式开发，但是支持前端和后端绑定部署。</p></div><h2 id="_1、首先确认前端代码-打包基础目录是否正确" tabindex="-1"><a class="header-anchor" href="#_1、首先确认前端代码-打包基础目录是否正确" aria-hidden="true">#</a> 1、首先确认前端代码 打包基础目录是否正确</h2><blockquote><p>下图中 /client/ 代表打包后代码文件必须在一个 client 目录下</p></blockquote><p><img src="'+t+`" alt="配置打包路径"></p><h2 id="_2、打包前端代码" tabindex="-1"><a class="header-anchor" href="#_2、打包前端代码" aria-hidden="true">#</a> 2、打包前端代码</h2><blockquote><p>打包后的前端代码，位于 dist 文件夹中</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3、将打包后的代码放到-后端项目-的-wwwroot-目录下" tabindex="-1"><a class="header-anchor" href="#_3、将打包后的代码放到-后端项目-的-wwwroot-目录下" aria-hidden="true">#</a> 3、将打包后的代码放到 后端项目 的 wwwroot 目录下</h2><blockquote><p>例如：/wwwwroot/client/ 这里的 client 目录根据你代码配置 /client/ 而定</p></blockquote><h2 id="_4、部署-net7-后端项目" tabindex="-1"><a class="header-anchor" href="#_4、部署-net7-后端项目" aria-hidden="true">#</a> 4、部署 Net7 后端项目</h2><blockquote><p>后端部署以个人需求而定，这里不做详细说明，请自行百度 或者 GPT。</p></blockquote><h2 id="_5、访问" tabindex="-1"><a class="header-anchor" href="#_5、访问" aria-hidden="true">#</a> 5、访问</h2>`,13),p={href:"http://localhost:%E5%90%8E%E7%AB%AF%E7%AB%AF%E5%8F%A3/",target:"_blank",rel:"noopener noreferrer"};function u(_,b){const a=n("ExternalLinkIcon");return r(),c("div",null,[h,e("blockquote",null,[e("p",null,[e("a",p,[i("http://localhost:后端端口/"),s(a)])])])])}const k=o(d,[["render",u],["__file","simple.html.vue"]]);export{k as default};
